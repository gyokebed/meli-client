$yellow: #FFE600;
$gray-soft: #EEEEEE;
$gray-middle: #999999;
$black: #333333;
$blue: #3483FA;

.search-bar {
  background-color: $yellow;
  padding: 12px 0;
  form {
    height: 40px;
    input {
      flex-basis: 95%;
      border: none;
      padding: 10px;
      color: $black;
      height: 100%;
      &::placeholder {
        color: $gray-middle; 
      }
    }
    button {
      flex-basis: 5%;
      background-color: $gray-soft;
      height: 100%;
      &:disabled {
        cursor: auto;
        opacity: .6;
      }
    }
  }
}
.flex {
  display: flex;
  align-items: center;
}
.center {
  align-items: center;
}
.text-center {
  text-align: center;
}
.p-x {
  padding-left: 16px;
  padding-right: 16px;
}
.p-y {
  padding-top: 16px;
  padding-bottom: 16px;
}
.m-x {
  margin-left: 16px;
  margin-right: 16px;
}
.m-y {
  margin-top: 16px;
  margin-bottom: 16px;
}
.m-r {
  margin-right: 16px;
}
.m-l {
  margin-left: 16px;
}
.m-b {
  margin-bottom: 16px;
}
.m-t {
  margin-top: 16px;
}
.m-t-2x {
  margin-top: 32px;
}
.m-b-2x {
  margin-bottom: 32px;
}
.m-l-2x {
  margin-left: 32px;
}
.m-r-2x {
  margin-right: 48px;
}
.m-l-3x {
  margin-left: 48px;
}
.m-t-3x {
  margin-top: 48px;
}
.border-sm {
  border-radius: 4px;
}
.border-md {
  border-radius: 8px;
}
.text-xs {
  font-size: 12px;
}
.text-xs-2x {
  font-size: 24px; 
}
.text-sm {
  font-size: 14px;
}
.text-sm-2x {
  font-size: 28px;
}
.text-md {
  font-size: 16px;
}
.text-lg {
  font-size: 18px;
  &__base {
    font-weight: normal;
  }
}
.text-xl {
  font-size: 46px;
}
h1 {
  font-size: 24px;
}
h2 {
  font-size: 18px;
}
.inline {
  display: inline;
}
.mb-16 {
  margin-bottom: 16px;
}
.mb-32 {
  margin-bottom: 32px;
}
.btn {
  border: none;
  &:hover {
    cursor: pointer;
  }
  &-lg {
    background-color: $blue;
    width: 100%;
    height: 50px;
    color: #ffffff;
    border-radius: 8px;
  }
}
$columns: 12;
$gap: 15px;
$breakpoints: (
    xs: 480px,
    sm: 768px,
    md: 960px,
    lg: 1170px,
    xl: 1280px
);
@mixin create-selectors($breakpoint: null) {
    $infix: if($breakpoint == null, '', '-#{$breakpoint}');

    @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
            grid-column-end: span $i;
        }
        .col-offset#{$infix}-#{$i} {
            grid-column-start: $i + 1;
        }
        .row#{$infix}-#{$i} {
            grid-row-end: span $i;
        }
        .row-offset#{$infix}-#{$i} {
            grid-row-start: $i + 1;
        }
    }
}
.grid {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    grid-gap: $gap;
    gap: $gap;
    padding: 20px;
}
@media only screen and (min-width: 1170px) {
 .grid {
    padding: 0;
 }
}
@include create-selectors;
@each $breakpoint, $width in $breakpoints {
    @media (min-width: $width) {
        @include create-selectors($breakpoint);
    }
}
