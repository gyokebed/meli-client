$yellow: #FFE600;
$gray-soft: #EEEEEE;
$gray-middle: #999999;
$black: #333333;

.search {
  background-color: $yellow;
  padding: 8px 0;
  margin-bottom: 16px;
  input {
    width: calc(100% - 40px);
    height: 100%;
    border: none;
    padding: 10px;
    font-size: 18px;
    color: $black;
    &::placeholder {
      color: $gray-middle; 
      font-size: 26;
    }
  }
  button {
    width: 40px;
    height: 100%;
    background-color: $gray-soft;
    border: none;
    &:hover {
      cursor: pointer;
    }
    &:disabled {
      cursor: auto;
      opacity: .6;
    }
  }
}

.results {
  padding: 16px 0;
  div {
    &:first-child {
      display: flex;
      align-items: center;
    }
  }
  a img {
    margin: 0 16px;
    border-radius: 4px;
  }
  span {
    font-size: 24px;
    display: inline-block;
    margin-right: 8px;
    margin-bottom: 32px;
  }
  h2 {
    font-size: 18px;
    font-weight: normal;
  }
  p {
    font-size: 12px;
    margin-top: 45px;
  }
}

$columns: 12;
$gap: 15px;
$breakpoints: (
    xs: 480px,
    sm: 768px,
    md: 960px,
    lg: 1170px,
    xl: 1280px
);

@mixin create-selectors($breakpoint: null) {
    $infix: if($breakpoint == null, '', '-#{$breakpoint}');

    @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
            grid-column-end: span $i;
        }
        .col-offset#{$infix}-#{$i} {
            grid-column-start: $i + 1;
        }
        .row#{$infix}-#{$i} {
            grid-row-end: span $i;
        }
        .row-offset#{$infix}-#{$i} {
            grid-row-start: $i + 1;
        }
    }
}

.grid {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    grid-gap: $gap;
    gap: $gap;
}

@include create-selectors;

@each $breakpoint, $width in $breakpoints {
    @media (min-width: $width) {
        @include create-selectors($breakpoint);
    }
}
